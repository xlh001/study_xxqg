# Go应用程序构建和打包配置文件

# 设置环境变量
env:
  - GO111MODULE=on
  - DOCKER_REGISTRY=docker.io
  - DOCKER_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}
  - DOCKER_PASSWORD=${{ secrets.DOCKERHUB_PASSWORD }}

# 在构建之前运行的钩子
before:
  hooks:
    - go mod tidy
    - go vet ./...
    - golangci-lint run ./...
    - go test ./...

# 构建配置
builds:
  # 不包含Windows的构建
  - id: nowin
    os: [linux, darwin]
    arch: [386, amd64, arm, arm64]
    arm: [6, 7, 8]
    env:
      - CGO_ENABLED=0
      - GO111MODULE=on
    # 添加缓存机制
    cache:
      directories:
        - $HOME/.cache/go-build
        - $HOME/.cache/go-mod
    mod_timestamp: "{{ .CommitTimestamp }}"
    flags: ["-trimpath"]
    ldflags: ["-s", "-w", "-X main.VERSION=v{{.Version}}"]

  # 仅包含Windows的构建
  - id: win
    os: [windows]
    arch: [386, amd64, arm, arm64]
    arm: [6, 7, 8]
    env:
      - CGO_ENABLED=0
    mod_timestamp: "{{ .CommitTimestamp }}"
    flags: ["-trimpath"]
    ldflags: ["-s", "-w", "-X main.VERSION=v{{.Version}}", "-H=windowsgui"]
    ignore:
      - goos: windows
        goarch: arm

  # Docker镜像构建
  - id: docker
    os: [linux, darwin]
    arch: [amd64, arm64]
    env:
      - CGO_ENABLED=0
    mod_timestamp: "{{ .CommitTimestamp }}"
    flags: ["-trimpath"]
    ldflags: ["-s", "-w", "-X main.VERSION=v{{.Version}}"]
    artifacts:
      - image: xlh001/study_xxqg:{{.Version}}
        format: docker
        tags: ["latest", "{{.Os}}-{{.Arch}}"]

# 文件校验
checksum:
  name_template: "{{ .ProjectName }}_checksums.txt"

# 发布记录
changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"
      - fix typo
      - Merge pull request
      - Merge branch
      - Merge remote-tracking
      - go mod tidy

# 打包
archives:
  # 所有打包格式的配置
  - id: all
    builds:
      - win
      - nowin
    name_template: "{{ .ProjectName }}_{{ .Os }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}"
    archive_format_overrides:
      - goos: windows
        goarch: [386, amd64, arm, arm64]
        format: zip
      - goos: linux
        goarch: [386, amd64, arm, arm64]
        format: tar.gz
      - goos: darwin
        goarch: [386, amd64, arm, arm64]
        format: tar.gz

# 发布到NPM
nfpms:
  - license: AGPL 3.0
    homepage: https://github.com/xlh001/study_xxqg
    file_name_template: "{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}"
    formats:
      - deb
      - rpm
    maintainer: johlanse
    builds:
      - nowin
      - win

# 上传到Docker Hub
publish:
  docker:
    - id: xlh001/study_xxqg
      username: $DOCKER_USERNAME
      password: $DOCKER_PASSWORD
      tag: "{{.Version}}"
